Wprowadzenie do kursu React.js od podstaw
 by  MichaÅ‚ Miszczyszyn 28 listopada 2017 Front-end / JavaScript
https://typeofweb.com/kurs/react-js/

    Wprowadzenie do kursu React.js od podstaw
    Poznaj React.js
    Pierwszy komponent w React.js
    Props czyli atrybuty w React.js
    PodziaÅ‚ na komponenty w React.js
    Klasy jako komponenty React.js
    Interakcja z komponentami React.js
    Stan komponentÃ³w React.js
    State w React.js 2
    Metody cyklu Å¼ycia komponentu w React.js
    React.js w przykÅ‚adach: filtrowanie statycznej listy
    Tworzenie aplikacji React.js dziÄ™ki create-react-app
    React.js na GitHub Pages dziÄ™ki create-react-app
    Testowanie aplikacji React.js â€” podstawy Enzyme
    Testowanie React.js w Enzyme â€” props, state i interakcje
    Poprawne bindowanie funkcji w React.js
    Odpowiadam na pytania: Babel, ECMAScript, destrukturyzacja, onClick, className
    Komunikacja pomiÄ™dzy komponentami w React.js
    Komunikacja z API w React.js
    Formularze w React.js â€” kontrolowane komponenty
    Formularze w React.js â€” niekontrolowane komponenty
    Odpowiadam na pytania: props, nawiasy klamrowe, funkcje vs klasy, import react
    TDD w React.js z pomocÄ… react-testing-library
    Flux i Redux
    React + Redux â€” kurs: wprowadzenie i podstawy
    React + Redux â€” filtrowanie listy, proste selektory
    Projektowanie komponentÃ³w: Presentational & Container Components
    AsynchronicznoÅ›Ä‡ w Redux: redux-thunk
    Kiedy uÅ¼ywaÄ‡ state, a kiedy Redux?
    Nowe metody cyklu Å¼ycia: getDerivedStateFromProps i getSnapshotBeforeUpdate
    Leniwe Å‚adowanie komponentÃ³w w React dziÄ™ki import
    Higher Order Reducers â€” Redux i powtarzanie kodu

Kurs umieszczam naGitHubie.

NarzÄ™dzia

Po zakoÅ„czeniu instalacji, Twoim oczom ukazuje siÄ™ instrukcja z komendami, z ktÃ³rych moÅ¼esz korzystaÄ‡. 
WejdÅº do folderu react-test-create-react-app i wtedy moÅ¼esz korzystaÄ‡ z takich poleceÅ„:

    npm start â€” uruchamia serwer deweloperski â€” bÄ™dziemy z tego polecenia korzystaÄ‡ najczÄ™Å›ciej
    npm run build â€” buduje wersjÄ™ produkcyjnÄ… gotowej aplikacji â€” ten kod wrzucasz na serwer
    npm test â€” odpala testy
    npm run eject â€” usuwa create-react-app i kopiuje wszystkie pliki konfiguracyjne do projektu. 
        DziÄ™ki temu moÅ¼esz je dowolnie zmodyfikowaÄ‡, ale nie bÄ™dziesz juÅ¼ mÃ³gÅ‚ korzystaÄ‡ 
        z aktualizacji do create-react-app. Na razie tego nie uÅ¼ywaj ğŸ™‚

12 
- Dodaj homepage do package.json
        "homepage": "https://imiÄ™.github.io/nazwa",
- Zainstaluj paczkÄ™ i dodaj skrypty
    Zainstaluj pomocniczÄ… paczkÄ™ gh-pages. Jest to proste narzÄ™dzie do publikowania rzeczy na GitHubie. 
    Jedno polecenie: npm install --save gh-pages
    NastÄ™pnie dodaj dwa nowe skrypty do swojego package.json:
        {
            "scripts": {
                "predeploy": "npm run build",
                "deploy": "gh-pages -d build",
                â€¦
            }
        }
- ZrÃ³b deploy
    Tak, to naprawdÄ™ juÅ¼ ğŸ˜‰ Prawie gotowe. WywoÅ‚aj tylko npm run deploy.
- Skonfiguruj GitHub Pages
    Ustaw, aby GitHub Pages korzystaÅ‚o ze stworzonego wÅ‚aÅ›nie brancha gh-pages. 

14
    Enzyme
Enzyme to biblioteka do testowania komponentÃ³w React.js. UÅ‚atwia tworzenie 
komponentÃ³w na potrzeby testÃ³w, odczytywanie oraz zmianÄ™ 
propsÃ³w i state, a takÅ¼e pozwala na asercje. Zgodnie z dokumentacjÄ… 
create-react-app aby zaczÄ…Ä‡ uÅ¼ywaÄ‡ cra razem z enzyme trzeba zainstalowaÄ‡:
    npm install --save-dev enzyme enzyme-adapter-react-16 react-test-renderer

Co robiÄ… poszczegÃ³lne paczki?
    enzyme â€” wspomniana biblioteka
    enzyme-adapter-react-16 â€” enzyme wymaga zainstalowania odpowiedniego adaptera do konkretnej wersji React.js
    react-test-renderer â€” renderowanie bez koniecznoÅ›ci istnienia DOM
NastÄ™pnie stwÃ³rz jeszcze jeden plik src/setupTests.js. 
Tam zawrzyj konfiguracjÄ™ wszystkich testÃ³w. 
W najprostszej wersji wyglÄ…da ona tak:
    import { configure } from 'enzyme';
    import Adapter from 'enzyme-adapter-react-16';

    configure({ adapter: new Adapter() });
W tym samym pliku moÅ¼esz teÅ¼ dodaÄ‡ np. globalne mocki â€” jeÅ›li 
Ci bÄ™dÄ… potrzebne. Albo biblioteki, z ktÃ³rych chcesz korzystaÄ‡ w testach.

19
    Komunikacja z API w React.js

20 
    Formularze w React.js â€” kontrolowane komponenty

21 
    Formularze w React.js â€” niekontrolowane komponenty

23
    TDD w React.js z pomocÄ… react-testing-library

    Projekt stworzymy z boilerplate create-react-app, 
    Axios uÅ¼yjemy do pobierania danych z zewnÄ™trznego API, 
    do uruchamiania testÃ³w Jestâ€ša, do mockowania zewnÄ™trznego API MockAxios, 
    a do renderowania komponentÃ³w, triggerowania akcji i obsÅ‚ugi asynchronicznych metod
    react-testing-library â€” Å›wietnej i ultra lekkiej biblioteki stworzonej przez
    cytowanego juÅ¼ wczeÅ›niej Kent C. Dodds.

    Generujemy projekt z create-react-app wg. instrukcji, 
    a nastÄ™pnie instalujemy dodatkowe zaleÅ¼noÅ›ci (
        do stworzenia projektu moÅ¼emy uÅ¼yÄ‡ takÅ¼e CodeSandbox):

    Utworzenie projektu i jego katalogu: 
            npx create-react-app react_typeofweb

    i zaleÅ¼noÅ›ci:
            npm install axios
            npm install --save-dev axios-mock-adapter react-testing-library 

24. Flux i Redux
    
25. React + Redux â€” kurs: wprowadzenie i podstawy
    Zacznij od zainstalowania paczek redux i react-redux:
        npm install --save react-redux redux

    Praca z Reduksem skÅ‚ada siÄ™ z 3 krokÃ³w:
    1.Stworzenie store
    2.Zdefiniowanie akcji
    3.Napisanie reducerÃ³w

